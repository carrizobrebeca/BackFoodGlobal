"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.RawLine = exports.ParameterizedLine = void 0;
/**
 * Parameterized line
 */
class ParameterizedLine {
    constructor(module, lineType, parameters = [], prefix = "") {
        this.prefix = prefix;
        this.module = module;
        this.lineType = lineType;
        this.parameters = parameters;
    }
    isValid() {
        return false;
    }
    isEmpty() {
        return this.prefix.length === 0 && this.module === "" && this.lineType === "" && this.parameters.length === 0;
    }
    getLiteral(paramSep = ",") {
        let prefixLiteral = "";
        if (this.prefix.length) {
            prefixLiteral = `/*${this.prefix}*/ `;
        }
        return `${prefixLiteral}${this.module}.${this.lineType}(${this.getParameterLiteral(paramSep)});`;
    }
    clear() {
        this.prefix = "";
        this.module = "";
        this.lineType = "";
        this.parameters = [];
    }
    getParameterLiteral(sep = ",") {
        const segments = this.parameters.map((param) => {
            return param.getLiteral();
        });
        return segments.join(sep);
    }
}
exports.ParameterizedLine = ParameterizedLine;
/**
 * Parameter without parameterization
 * Empty line and comment line should be stored using RawLine.
 */
class RawLine {
    constructor(content) {
        this.content = content;
    }
    isValid() {
        return true;
    }
    isEmpty() {
        return this.content.length === 0;
    }
    getLiteral() {
        return this.content;
    }
    clear() {
        this.content = "";
    }
}
exports.RawLine = RawLine;
